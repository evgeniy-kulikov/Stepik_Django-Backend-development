# Вариант установки django-проекта через терминал
#  Запускаем терминал

#  Переходим в диск d:
d:

#  Переходим впапку с будущим проектом
cd __PythonProject\Stepik_Django_Backend development

#  Создаем виртуальное окружение
python -m venv venv
 
#  Активируем виртуальное окружение
venv\Scripts\activate

# Устанавливаем Django
pip install Django==3.2.18

#  Желательно обновить pip
python.exe -m pip install --upgrade pip

#  Создаем проект
django-admin startproject store

# Создание приложения
python manage.py startapp products

# запуск сервера
python manage.py runserver
# запуск сервера (аналогичный результат)
./manage.py runserver

# Для загрузки статики делаем:
1) в файле store/settings.py
# указываем путь к статике проекта. Сама папка static находится в корне проекта
STATICFILES_DIRS = [BASE_DIR / 'static']
2) в файле products/templates/products/index.html
# а так же в других шаблонах, в первой строке файла делаем загрузку статики
{% load static %}
3) Переписываем в шаблонах везде, где это необходимо:
наприер меняем:
<!--    <link href="/static/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">  -->
на следущее:
<link href="{% static 'vendor/bootstrap/css/bootstrap.min.css' %}" rel="stylesheet">





users/templates/users/login.html
line 8
non_field_errors  # ловим ошибки сразу в двух полях как одну


users/templates/users/registration.html.html
line 12
form.errors  # ловим ошибки отдельно для каждого поля

products/templates/products/base.html
line 54
href="{% url 'admin:index' %}"  # адрес админ-панели


./manage.py makemigrations
# выгрузка данных из базы (файлы с одинаковыми именами ПЕРЕЗАПИШУТЬСЯ !!!)
# Первоначальный вариант суперпользователя (до урока 4.6)
python -Xutf8 manage.py dumpdata --format=json --indent=4 auth.User > products/fixtures/user_first.json

# Суперпользователь + пользователи, после создания приложения users (урок 4.6)
python -Xutf8 manage.py dumpdata --format=json --indent=4 users.User > products/fixtures/user.json
python -Xutf8 manage.py dumpdata --format=json --indent=4 products.ProductCategory > products/fixtures/categories.json
python -Xutf8 manage.py dumpdata --format=json --indent=4 products.Product > products/fixtures/goods.json
python -Xutf8 manage.py dumpdata --format=json --indent=4 products.Basket > products/fixtures/basket.json

# загрузить данные из файла *.json в  базу данных (существующие данные в базе при этом перезапишутся)
# Загружать в последовательности предложенного списка !!!
# Команды для загрузки через консоль:
python manage.py loaddata user.json
python manage.py loaddata categories.json
python manage.py loaddata goods.json
python manage.py loaddata basket.json
./manage.py loaddata goods.json

__________________________________________
Другой вариант для фикстур (проблема utf-8)
1.
Установить пакет:
https://pypi.org/project/django-dump-load-utf8/
pip install django-dump-load-utf8

2.
# settings.py
INSTALLED_APPS = [
    '...',
    'django_dump_load_utf8',
    '...',
]

3.
manage.py dumpdatautf8 --output data.json
# In another database
manage.py loaddatautf8 data.json

python manage.py dumpdatautf8 products.Product --output goods.json
python manage.py loaddatautf8 products/fixtures/categories.json
__________________________________________

# Суперпользователь
admin
1234


# Пользователь
Ringo
Starr
ringo
ringo@starr.com
Ringo1234#

Paul
McCartney
paul
paul@mccartney.com
Paul1234#

Elton
John
elton
elton@john.com
Elton1234#


User
Test
usertest
not_show заменить )))
not_show@yandex.ru
User12345
